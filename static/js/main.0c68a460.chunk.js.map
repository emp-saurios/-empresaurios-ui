{"version":3,"sources":["../../src/components/Icon/Icon.tsx","../../src/components/Button/Button.tsx","../../src/components/Input/Input.tsx","../../src/components/Separator/Separator.tsx","../../src/components/Form/Form.tsx","../../src/components/Switch/Switch.tsx","../../src/components/Accordion/Accordion.tsx","../../src/index.tsx","sections/Buttons/ButtonSection.tsx","App.tsx","index.tsx"],"names":["Icon","icon","iconType","className","styles","HeroIcons","HeroIconsSolid","Button","children","iconSide","typeButton","size","rest","btnClassName","Input","name","title","variant","message","icon_","input","label","fill","message_","htmlFor","React","Separator","text","Form","titleText","Switch","type","Accordion","useState","isOpen","setIsOpen","onClick","ExampleComponent","ButtonSection","toggle","checkbox","radio","state","setState","onChange","e","currentTarget","value","id","defaultChecked","checked","IconTest","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","App","style","padding","display","gap","flexWrap","placeholder","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0c68a460.chunk.js","sourcesContent":["import React, { FC } from 'react'\nimport * as HeroIcons from '@heroicons/react/outline'\nimport * as HeroIconsSolid from '@heroicons/react/solid'\n\nimport styles from './Icon.scss'\n\nconst Icon: FC<IconProps> = ({ icon, iconType }) => {\n  return (\n    <span className={styles.iconContainer}>\n      {/* @ts-ignore */}\n      {iconType === 'outline' ? HeroIcons[icon]() : HeroIconsSolid[icon]()}\n    </span>\n  )\n}\n\nexport type HeroIconsType = keyof typeof HeroIcons\nexport type IconType = 'outline' | 'solid'\n\ntype IconProps = {\n  iconType: IconType\n  icon: HeroIconsType\n}\n\nexport default Icon\n","import React, { FC, ButtonHTMLAttributes } from 'react'\r\nimport Icon from '../Icon'\r\nimport styles from './Button.scss'\r\nimport { HeroIconsType, IconType } from '../Icon/Icon'\r\n\r\nconst Button: FC<ButtonProps> = ({\r\n  children,\r\n  icon,\r\n  iconSide = 'right',\r\n  typeButton = 'default',\r\n  className = '',\r\n  size = 'normal',\r\n  iconType = 'outline',\r\n  ...rest\r\n}) => {\r\n  const actionBtnWithText = typeButton === 'action' && children ? styles.withText : ''\r\n  const btnClassName = typeButton === 'action' ? styles.action : `${styles.button} ${styles[typeButton]} ${styles[size]} ${className} ${actionBtnWithText}`\r\n\r\n  return (\r\n    <button className={btnClassName} {...rest}>\r\n      {iconSide === 'left' && icon && <Icon icon={icon} iconType={iconType} />}\r\n\r\n      {children}\r\n\r\n      {iconSide === 'right' && icon && <Icon icon={icon} iconType={iconType} />}\r\n    </button>\r\n  )\r\n}\r\n\r\ninterface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\r\n  onClick?: () => void\r\n  icon?: HeroIconsType\r\n  iconSide?: 'left' | 'right'\r\n  typeButton?: 'default' | 'light' | 'white' | 'ghost' | 'link' | 'action'\r\n  size?: 'normal' | 'small' | 'smaller'\r\n  iconType?: IconType\r\n}\r\n\r\nexport default Button\r\n","import React, { FC, InputHTMLAttributes, ReactNode } from 'react'\r\nimport styles from './Input.scss'\r\n\r\nconst Input: FC<InputProps> = ({ name, title, variant = '', message, icon, ...rest }) => {\r\n  const { icon_, input, label, fill, message_ } = styles\r\n\r\n  return (\r\n    <div className={styles[variant]}>\r\n      {title && (\r\n        <label className={label} htmlFor={name}>\r\n          {title}\r\n        </label>\r\n      )}\r\n      <div className={input}>\r\n        <input className={fill} name={name} {...rest} />\r\n        {icon && <div className={icon_}>{icon}</div>}\r\n      </div>\r\n      {message && <p className={message_}>{message}</p>}\r\n    </div>\r\n  )\r\n}\r\n\r\ntype Variants = 'success' | 'error' | 'warning' | 'disabled'\r\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\r\n  title?: string\r\n  variant?: Variants\r\n  icon?: ReactNode\r\n  message?: string\r\n}\r\n\r\nexport default Input\r\n","import React, { FC } from 'react'\nimport './Separator.css'\n\nconst Separator: FC<SeparatorProps> = ({ text }) => {\n  return (\n    <div>\n      <p>{text}</p>\n      <hr />\n    </div>\n  )\n}\n\ninterface SeparatorProps {\n  text?: string\n}\n\nexport default Separator\n","import React, { FC, FormHTMLAttributes } from 'react'\nimport './Form.css'\n\nconst Form: FC<FormProps> = ({ children, titleText, ...rest }) => {\n  return (\n    <form {...rest}>\n      <h2>{titleText}</h2>\n      {children}\n    </form>\n  )\n}\n\ninterface FormProps extends FormHTMLAttributes<HTMLFormElement> {\n  titleText?: string\n}\n\nexport default Form\n","import React, { FC, HTMLProps } from 'react'\nimport styles from './Switch.scss'\n\nconst Switch: FC<SwitchProps> = ({ type = 'checkbox', className = '', ...rest }) => {\n  return (\n    <input\n      className={`${styles.input} ${styles[type]} ${className}`}\n      type={type === 'radio' ? 'radio' : 'checkbox'}\n      {...rest}\n    />\n  )\n}\n\ninterface SwitchProps extends HTMLProps<HTMLInputElement> {\n  active?: boolean\n  type?: 'toggle' | 'checkbox' | 'radio'\n}\n\nexport default Switch\n","import React, { FC, useState } from 'react'\r\nimport Icon from '../Icon'\r\n\r\nconst Accordion: FC<AccordionProps> = ({ title, children }) => {\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const icon = isOpen ? 'ArrowUpIcon' : 'ArrowDownIcon'\r\n\r\n  const toggle = () => setIsOpen(!isOpen)\r\n\r\n  return (\r\n    <div>\r\n      <div onClick={toggle}>\r\n        <h3>{title}</h3>\r\n        <Icon icon={icon} iconType=\"outline\" />\r\n      </div>\r\n      <div>{isOpen && children}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\ninterface AccordionProps {\r\n  title: string\r\n}\r\n\r\nexport default Accordion\r\n","import * as React from 'react'\r\nimport './styles/main.scss'\r\n\r\nexport * from './components'\r\n\r\ninterface Props {\r\n  text: string\r\n}\r\n\r\nexport const ExampleComponent = ({ text }: Props) => {\r\n  return <div>Example Component: {text}</div>\r\n}\r\n","import React, { FormEvent, useState } from 'react'\nimport { Button, Switch } from 'empresaurios-ui'\n\nconst ButtonSection = () => {\n  const [state, setState] = useState({\n    toggle: true,\n    checkbox: true,\n    radio: 'none' as 'yes' | 'no' | 'none'\n  })\n\n  const { checkbox, toggle, radio } = state\n\n  const onChange = (e: FormEvent<HTMLInputElement>) => {\n    setState({\n      ...state,\n      [e.currentTarget.name]: e.currentTarget.value\n    })\n  }\n\n  return (\n    <section>\n      <h3>Botones :)</h3>\n      <div className=\"section-container\">\n        <div className=\"wrapper-container\">\n          <label htmlFor=\"default\">Default</label>\n          <Button id=\"default\" typeButton=\"default\">\n            Button\n          </Button>\n        </div>\n        <div className=\"wrapper-container\">\n          <label htmlFor=\"light\">Light</label>\n          <Button id=\"light\" typeButton=\"light\" icon=\"ThumbUpIcon\" iconType=\"outline\">\n            Button\n          </Button>\n        </div>\n\n        <div className=\"wrapper-container\">\n          <label htmlFor=\"white\">White</label>\n          <Button id=\"white\" typeButton=\"white\" icon=\"ThumbUpIcon\" iconSide=\"left\" iconType=\"solid\">\n            Button a\n          </Button>\n        </div>\n        <div className=\"wrapper-container\">\n          <label htmlFor=\"ghost\">Ghost</label>\n          <Button\n            id=\"ghost\"\n            size=\"small\"\n            typeButton=\"ghost\"\n            icon=\"ThumbUpIcon\"\n            iconSide=\"left\"\n            iconType=\"solid\"\n          >\n            Button small\n          </Button>\n        </div>\n        <div className=\"wrapper-container\">\n          <label htmlFor=\"link\">Link</label>\n          <Button\n            id=\"link\"\n            size=\"smaller\"\n            typeButton=\"link\"\n            icon=\"ThumbDownIcon\"\n            iconSide=\"left\"\n            iconType=\"solid\"\n          >\n            Button smaller\n          </Button>\n        </div>\n        <div className=\"wrapper-container\">\n          <label htmlFor=\"action\">Action</label>\n          <Button id=\"action\" typeButton=\"action\" icon=\"TrashIcon\" iconSide=\"left\" />\n        </div>\n        <div className=\"wrapper-container\">\n          <label htmlFor=\"actionWithText\">Action with text</label>\n          <Button id=\"actionWithText\" typeButton=\"action\" icon=\"TrashIcon\" iconSide=\"left\">\n            Delete\n          </Button>\n        </div>\n        <div className=\"wrapper-container\">\n          <label htmlFor=\"switch\">Switch (Toggle)</label>\n          <Switch type=\"toggle\" name=\"switch\" defaultChecked={toggle} onChange={onChange} />\n        </div>\n        <div className=\"wrapper-container\">\n          <label htmlFor=\"checkbox\">Switch (Checkbox)</label>\n          <Switch type=\"checkbox\" onChange={onChange} name=\"checkbox\" defaultChecked={checkbox} />\n        </div>\n        <div className=\"wrapper-container\">\n          <label htmlFor=\"radio\">Switch (radio) - No</label>\n          <Switch\n            type=\"radio\"\n            onChange={onChange}\n            name=\"radio\"\n            value=\"no\"\n            checked={radio === 'no'}\n          />\n          <label htmlFor=\"radio\">Switch (radio) - Yes</label>\n          <Switch\n            type=\"radio\"\n            onChange={onChange}\n            name=\"radio\"\n            value=\"yes\"\n            checked={radio === 'yes'}\n          />\n        </div>\n      </div>\n      <hr />\n    </section>\n  )\n}\n\nexport default ButtonSection\n","import React from 'react'\r\n\r\nimport { ExampleComponent, Input, Separator, Form, Accordion } from 'empresaurios-ui'\r\nimport 'empresaurios-ui/dist/index.css'\r\nimport ButtonSection from './sections/Buttons/ButtonSection'\r\n\r\nconst IconTest = () => (\r\n  <svg fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n    <path\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n      strokeWidth=\"2\"\r\n      d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n    />\r\n  </svg>\r\n)\r\n\r\nconst App = () => {\r\n  return (\r\n    <div style={{ padding: '0 2rem' }}>\r\n      <ExampleComponent text=\"Empresaurios components UI 😄\" />\r\n\r\n      <ButtonSection />\r\n\r\n      <div>\r\n        <h3 className=\"h2\">Inputs</h3>\r\n        <section style={{ display: 'flex', gap: '1rem', flexWrap: 'wrap' }}>\r\n          <Input\r\n            title=\"Usuario\"\r\n            placeholder=\"jean@jeanda.mx\"\r\n            icon={<IconTest />}\r\n            message=\"Este es un mensaje de prueba\"\r\n          />\r\n          <Input title=\"Usuario\" placeholder=\"jean@jeanda.mx\" icon={<IconTest />} />\r\n          <Input title=\"Usuario\" placeholder=\"jean@jeanda.mx\" />\r\n          <Input placeholder=\"jean@jeanda.mx\" />\r\n          <Input placeholder=\"jean@jeanda.mx\" icon={<IconTest />} />\r\n          <Input\r\n            title=\"Usuario success\"\r\n            placeholder=\"jean@jeanda.mx\"\r\n            icon={<IconTest />}\r\n            message=\"Este es un mensaje de prueba\"\r\n            variant=\"success\"\r\n          />\r\n          <Input\r\n            title=\"Usuario\"\r\n            placeholder=\"jean@jeanda.mx\"\r\n            icon={<IconTest />}\r\n            message=\"Este es un mensaje de prueba\"\r\n            variant=\"error\"\r\n          />\r\n          <Input\r\n            title=\"Usuario\"\r\n            placeholder=\"jean@jeanda.mx\"\r\n            icon={<IconTest />}\r\n            message=\"Este es un mensaje de prueba\"\r\n            variant=\"warning\"\r\n          />\r\n\r\n          <Input\r\n            title=\"Usuario\"\r\n            placeholder=\"jean@jeanda.mx\"\r\n            icon={<IconTest />}\r\n            message=\"Este es un mensaje de prueba\"\r\n            variant=\"disabled\"\r\n          />\r\n        </section>\r\n        <hr />\r\n      </div>\r\n\r\n      <div>\r\n        <h3>Separadores</h3>\r\n        <Separator text=\"Ya tienes cuenta?\" />\r\n        <hr />\r\n      </div>\r\n\r\n      <div>\r\n        <h3>Formularios</h3>\r\n        <Form titleText=\"Registrate gratis\">\r\n          <Input title=\"Usuario\" type=\"email\" placeholder=\"jean@jeanda.mx\" />\r\n          <Input title=\"Contraseña\" type=\"password\" value=\"123123\" />\r\n        </Form>\r\n        <hr />\r\n      </div>\r\n\r\n      <div>\r\n        <h3>Accordion</h3>\r\n        <Accordion title=\"¿Qué incluye Google Workspace (anteriormente G Suite)?\">\r\n          <p>\r\n            Al igual que en G Suite, todos los planes de Google Workspace proporcionan correo\r\n            electrónico personalizado para su empresa y ofrecen herramientas de colaboración, como\r\n            Gmail, Calendario, Meet, Chat, Drive, Documentos, Hojas de cálculo, Presentaciones,\r\n            Formularios, Sites y muchas otras más. Para obtener detalles adicionales, visite nuestra\r\n            página de planes y precios.\r\n          </p>\r\n        </Accordion>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}